{"version":3,"sources":["components/Navbar.tsx","components/PersonForm.tsx","components/PersonList.tsx","pages/DataPage.tsx","pages/InfoPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Header","Layout","Navbar","location","useLocation","history","useHistory","className","onClick","push","process","SmileOutlined","theme","mode","defaultSelectedKeys","selectedKeys","pathname","Item","key","to","ScheduleOutlined","style","fontSize","margin","InfoCircleOutlined","layout","labelCol","span","wrapperCol","PersonForm","onFinish","Form","useForm","form","name","label","rules","required","placeholder","marginBottom","display","width","type","message","defaultPickerValue","moment","subtract","lineHeight","textAlign","valuePropName","checkedChildren","ManOutlined","unCheckedChildren","WomanOutlined","defaultChecked","justify","htmlType","resetFields","setFieldsValue","gender","DoB","PersonList","data","handleDelete","columns","title","dataIndex","sorter","a","b","age","filters","text","value","onFilter","record","align","render","length","onConfirm","shape","icon","DeleteOutlined","danger","background","md","offset","xs","dataSource","pagination","defaultPageSize","bordered","DataPage","Person","dob","this","format","diff","defaultPersons","useState","setData","useEffect","saved","JSON","parse","localStorage","getItem","stringify","setItem","undefined","newPerson","prev","filter","item","Link","Anchor","IconFont","createFromIconfontCN","scriptUrl","InfoPage","href","target","block","Content","App","component","path","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.ea3b01dd.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link, NavLink, useLocation, useHistory } from \"react-router-dom\";\nimport { Layout, Menu } from \"antd\";\nimport {\n  SmileOutlined,\n  ScheduleOutlined,\n  InfoCircleOutlined,\n} from \"@ant-design/icons\";\nimport \"./Navbar.css\";\n\nconst { Header } = Layout;\n\nexport const Navbar = () => {\n  const location = useLocation();\n  const history = useHistory();\n\n  return (\n    <Header>\n      <div className=\"logo\" onClick={() => history.push(`${process.env.PUBLIC_URL}/`)}>\n        <SmileOutlined /> React + TS\n      </div>\n      <Menu\n        theme=\"dark\"\n        mode=\"horizontal\"\n        defaultSelectedKeys={[`${process.env.PUBLIC_URL}/`]}\n        selectedKeys={[location.pathname]}\n        className=\"nav\"\n      >\n        <Menu.Item key={`${process.env.PUBLIC_URL}/`}>\n          <Link to={`${process.env.PUBLIC_URL}/`}>\n            <ScheduleOutlined style={{ fontSize: \"20px\", margin: 0 }} />\n          </Link>\n        </Menu.Item>\n        <Menu.Item key={`${process.env.PUBLIC_URL}/about`}>\n          <NavLink to={`${process.env.PUBLIC_URL}/about`}>\n            <InfoCircleOutlined style={{ fontSize: \"20px\", margin: 0 }} />\n          </NavLink>\n        </Menu.Item>\n      </Menu>\n    </Header>\n  );\n};\n","import React from \"react\";\nimport moment from \"moment\";\nimport {\n  Form,\n  Input,\n  Button,\n  Space,\n  Row,\n  DatePicker,\n  Switch,\n} from \"antd\";\nimport { ManOutlined, WomanOutlined } from \"@ant-design/icons\";\nimport \"./PersonForm.css\";\n\nconst layout = {\n  labelCol: { span: 10 },\n  wrapperCol: { span: 4 },\n};\n\nexport const PersonForm = ({onFinish}) => {\n  const [form] = Form.useForm();\n\n  const onReset = () => {\n    form.resetFields();\n  };\n\n  const onFill = () => {\n    form.setFieldsValue({\n      name: \"Ruslan\",\n      gender: true,\n      DoB: moment(\"1992-10-10\", \"YYYY-MM-DD\"),\n    });\n  };\n\n  return (\n    <div className=\"site-layout-content\">\n      <Form {...layout} form={form} name=\"control-hooks\" onFinish={onFinish}>\n        <Form.Item name=\"name\" label=\"Name\" rules={[{ required: true }]}>\n          <Input placeholder=\"Enter the name\" />\n        </Form.Item>\n        <Form.Item label=\"* Date of Birth\" style={{ marginBottom: 0 }}>\n          <Form.Item\n            name=\"DoB\"\n            style={{ display: \"inline-block\", width: 'calc(60% - 12px)' }}\n            rules={[\n              {\n                type: \"object\",\n                required: true,\n                message: \"Date of Birth is required\",\n              },\n            ]}\n          >\n            <DatePicker defaultPickerValue={moment().subtract(20, \"years\")} />\n          </Form.Item>\n          <span\n            style={{\n              display: \"inline-block\",\n              width: \"calc(33% - 12px)\",\n              lineHeight: \"32px\",\n              textAlign: \"center\",\n            }}\n          >\n            Gender:\n          </span>\n          <Form.Item\n            name=\"gender\"\n            valuePropName=\"checked\"\n            style={{ display: \"inline-block\" }}\n          >\n            <Switch\n              className='rose'\n              checkedChildren={<ManOutlined />}\n              unCheckedChildren={<WomanOutlined />}\n              defaultChecked\n            />\n          </Form.Item>\n        </Form.Item>\n        <Row justify=\"center\">\n          <Form.Item>\n            <Space>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>\n              <Button htmlType=\"button\" onClick={onReset}>\n                Reset\n              </Button>\n              <Button type=\"link\" htmlType=\"button\" onClick={onFill}>\n                Fill form\n              </Button>\n            </Space>\n          </Form.Item>\n        </Row>\n      </Form>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Table, Row, Col, Popconfirm, Button } from \"antd\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\n\nexport const PersonList = ({ data, handleDelete }) => {\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      sorter: (a, b) => (a.name > b.name ? 1 : -1),\n      width: \"20%\",\n    },\n    {\n      title: \"Age\",\n      dataIndex: \"age\",\n      sorter: (a, b) => a.age - b.age,\n      width: \"15%\",\n    },\n    {\n      title: \"Gender\",\n      dataIndex: \"gender\",\n      filters: [\n        { text: \"Male\", value: \"male\" },\n        { text: \"Female\", value: \"female\" },\n      ],\n      onFilter: (value, record) => record.gender === value,\n      width: \"20%\",\n    },\n    {\n      title: \"Date of Birth\",\n      dataIndex: \"dob\",\n    },\n    {\n      align: \"center\" as \"center\",\n      render: (text, record) =>\n        data.length >= 1 ? (\n          <Popconfirm\n            title=\"Sure to delete?\"\n            onConfirm={() => handleDelete(record.key)}\n          >\n            <Button\n              type=\"primary\"\n              shape=\"circle\"\n              icon={<DeleteOutlined />}\n              danger\n            />\n          </Popconfirm>\n        ) : null,\n    },\n  ];\n\n  return (\n    <Row style={{ background: \"white\" }}>\n      <Col md={{ span: 12, offset: 6 }} xs={{ span: 24 }}>\n        <Table\n          columns={columns}\n          dataSource={data}\n          pagination={{ defaultPageSize: 5 }}\n          bordered\n        />\n      </Col>\n    </Row>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\n\nimport { PersonForm } from \"../components/PersonForm\";\nimport { PersonList } from \"../components/PersonList\";\n\nexport const DataPage = () => {\n  class Person {\n    name: string;\n    gender: string;\n    dob: string;\n    age: number;\n    key: number;\n    constructor(name: string, gender: boolean, dob: any, key?: number) {\n      this.name = name;\n      this.gender = gender ? \"male\" : \"female\";\n      this.dob = dob.format(\"LL\");\n      this.key = key || data.length + 1;\n      this.age = moment().diff(this.dob, \"years\");\n    }\n  }\n\n  const Ruslan = new Person(\"Ruslan\", true, moment(\"October 10, 1992\"), 1);\n  const Natasha = new Person(\"Natasha\", false, moment(\"December 8, 1992\"), 2);\n\n  const defaultPersons: Person[] = [Ruslan, Natasha];\n\n  const [data, setData] = useState<Person[]>(defaultPersons);\n\n  useEffect(() => {\n    const saved = JSON.parse(\n      localStorage.getItem(\"data\") || JSON.stringify(data)\n    ) as Person[];\n    setData(saved);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"data\", JSON.stringify(data));\n  }, [data]);\n\n  const onFinish = ({ name, DoB, gender }) => {\n    if (gender === undefined) gender = true;\n    const newPerson = new Person(name, gender, DoB);\n\n    setData((prev) => [newPerson, ...prev]);\n  };\n\n  const handleDelete = (key) => {\n    setData(data.filter((item) => item.key !== key));\n  };\n\n  return (\n    <>\n      <PersonForm onFinish={onFinish} />\n      <PersonList data={data} handleDelete={handleDelete} />\n    </>\n  );\n};\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Card, Col, Row, Button, Anchor } from \"antd\";\nimport { createFromIconfontCN } from \"@ant-design/icons\";\nimport \"./InfoPage.css\";\n\nconst { Link } = Anchor;\n\nconst IconFont = createFromIconfontCN({\n  scriptUrl: \"//at.alicdn.com/t/font_1849843_v5x82qchzy.js\",\n});\n\nexport const InfoPage = () => {\n  const history = useHistory();\n\n  return (\n    <div className=\"site-card-wrapper\">\n      <Row>\n        <Col md={{ span: 8, offset: 8 }} xs={{ span: 24 }}>\n          <Card title=\"React + TS + Ant Design app\">\n            <Anchor>\n                <Link href=\"https://reactjs.org/\" target=\"_blank\" title={<><IconFont type=\"icon-react\" /> React </>} />\n                <Link href=\"https://www.typescriptlang.org/index.html\" target=\"_blank\" title={<><IconFont type=\"icon-typescript-def\" /> TypeScript </>} />\n                <Link href=\"https://ant.design/\" target=\"_blank\" title={<><IconFont type=\"icon-antdesign\" /> Ant Design </>} />\n                <Link href=\"https://github.com/NiuRuslan/react-ts-antd\" target=\"_blank\" title={<><IconFont type=\"icon-github\" /> GitHub </>} />\n            </Anchor>\n            <br />\n              <Button block onClick={() => history.push(`${process.env.PUBLIC_URL}/`)}>\n                Main Page\n              </Button>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Layout } from \"antd\";\nimport \"antd/dist/antd.css\";\n\nimport { Navbar } from \"./components/Navbar\";\nimport { DataPage } from \"./pages/DataPage\";\nimport { InfoPage } from \"./pages/InfoPage\";\n\nconst { Content } = Layout;\n\nfunction App() {\n  return (\n    <Router>\n      <Layout>\n        <Navbar />\n        <Content>\n          <Switch>\n            <Route component={InfoPage} path={`${process.env.PUBLIC_URL}/about`} />\n            <Route component={DataPage} path={`${process.env.PUBLIC_URL}/`} />\n          </Switch>\n        </Content>\n      </Layout>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}